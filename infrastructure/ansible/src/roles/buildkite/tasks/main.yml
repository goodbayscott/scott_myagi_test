---

- name: configure buildkite apt-get repo key
  apt_key: keyserver=keyserver.ubuntu.com id=32A37959C2FA5C3C99EFBC32A79206696452D198 state=present

- name: add buildkite apt-get repo
  apt_repository: repo='deb https://apt.buildkite.com/buildkite-agent stable main' state=present

- name: install buildkite
  apt: name={{ item }} update_cache=yes
  with_items:
    - buildkite-agent

- name: configure buildkite
  shell: sed -i "s/xxx/5fc013efa1dee3c01ff788545c544dd25b1d52f1fc85c25b06/g" /etc/buildkite-agent/buildkite-agent.cfg

- name: duplicate conf for each agent
  shell: cp buildkite-agent.conf buildkite-agent-{{ item }}.conf
  args:
    chdir: /etc/init/
  with_sequence: start=0 end={{ agent_num - 1}}

- name: ensure standard buildkite agent is stopped
  service: name=buildkite-agent state=stopped enabled=yes

- name: ensure buildkite agents are up
  service: name=buildkite-agent-{{ item }} state=started enabled=yes
  with_sequence: start=0 end={{ agent_num - 1}}

- name: setup ssh folder
  file: path=~/.ssh state=directory
  become: yes
  become_user: buildkite-agent
  vars:
    # Without this, ansible will fail
    ansible_ssh_pipelining: true

- name: setup buildkite user private key
  copy: src=id_rsa dest=~/.ssh/id_rsa owner=buildkite-agent group=buildkite-agent mode=0600
  become: yes
  become_user: buildkite-agent
  vars:
    ansible_ssh_pipelining: true

- name: setup buildkite user public key
  shell: echo "{{ lookup('file', 'id_rsa.pub') }}" > ~/.ssh/is_rsa.pub
  become: yes
  become_user: buildkite-agent
  vars:
    ansible_ssh_pipelining: true

- name: add bitbucket key
  shell: ssh-keyscan bitbucket.org > ~/.ssh/known_hosts
  become: yes
  become_user: buildkite-agent
  vars:
    ansible_ssh_pipelining: true


- name: add github key
  shell: ssh-keyscan github.com >> ~/.ssh/known_hosts
  become: yes
  become_user: buildkite-agent
  vars:
    ansible_ssh_pipelining: true


- name: setup awscli for storing distributions on s3
  shell: pip install awscli

- name: setup myagi build scripts
  copy: src={{ item }} dest=/usr/local/bin/{{ item }} owner=root group=root mode=0755
  with_items:
    - myagi-start.sh
    - myagi-test-js.sh
    - myagi-test-py.sh
    - myagi-dist.sh
    - myagi-upload.sh

- name: install phantom dependencies
  apt: name={{ item }} update_cache=yes
  with_items:
    - build-essential
    - g++
    - flex
    - bison
    - gperf
    - ruby
    - perl
    - libsqlite3-dev
    - libfontconfig1-dev
    - libicu-dev
    - libfreetype6
    - libssl-dev
    - libpng-dev
    - libjpeg-dev
    - python
    - libx11-dev
    - libxext-dev

- name: install headless chromium dependencies
  apt: name={{ item }} update_cache=yes
  with_items:
    - chromium-browser
    - xvfb

- name: add yarn key
  shell: curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -

- name: add yarn package source
  shell: echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list

- name: install yarn
  apt: name={{ item }} update_cache=yes
  with_items:
    - yarn=1.0.1-1

- name: install hugo
  shell: cd ~ && wget https://github.com/gohugoio/hugo/releases/download/v0.32.3/hugo_0.32.3_Linux-64bit.deb && dpkg -i hugo*.deb
